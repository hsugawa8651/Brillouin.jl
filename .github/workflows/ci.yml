name: CI
on:
  - push
  - pull_request
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'
          - 'nightly'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: install scipy    # because the python version picked by PyCall.jl sometimes isn't Conda.jl's version, but system version, we make sure we have scipy installed
        run: pip install scipy
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - run: | # TODO: Remove this after Bravais.jl is registered (right now, need to manually add package)
          julia --color=yes --project -e '
            using Pkg
            Pkg.develop(PackageSpec(url="https://github.com/thchr/Crystalline.jl/tree/master/Bravais"))'
        shell: bash # avoid escaping issues w/ pwsh on Windows (cf. https://github.com/julia-actions/setup-julia#matrix-testing)
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
  docs:
    name: Documentation
    runs-on: macOS-latest # run on macOS instead of ubuntu due to aforementioned PyCall/Conda problem
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - uses: julia-actions/julia-buildpkg@v1
      - run: |  # TODO: Remove manual Bravais.jl dev'ing after it is registered
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(url="https://github.com/thchr/Crystalline.jl/tree/master/Bravais"))
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()'
#        shell: bash # avoid escaping issues w/ pwsh on Windows (cf. https://github.com/julia-actions/setup-julia#matrix-testing)
      - run: |
          julia --project=docs -e '
            using Documenter: doctest
            using Brillouin
            doctest(Brillouin)'
      - run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
